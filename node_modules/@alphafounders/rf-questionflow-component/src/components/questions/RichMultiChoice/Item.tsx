import React, { ReactElement, useEffect } from 'react';
import clsx from 'clsx';

import './RichMultiChoice.module.scss';
import RecommendIcon from '../../../public/icons/common/recommend.svg';
import CheckIcon from '../../../public/icons/common/checked.svg';
import UnCheckIcon from '../../../public/icons/common/unchecked.svg';

export type IDetail = {
  label?: string;
  value?: string;
};

export type IItem = {
  id: string;
  name?: string;
  logo: string;
  isRecommended?: boolean;
  isActive?: boolean;
  details: Array<IDetail>;
  isSelected?: boolean;
  eligibleText?: string;
};

export type ItemProps = {
  t: (s: string) => string;
  item: IItem;
  handleInputChange: (value: string, status: boolean | undefined) => void;
  isChecked?: boolean;
};

const Item = ({
  t,
  item,
  handleInputChange,
  isChecked,
}: ItemProps): ReactElement => {
  const onClickCard = () => {
    if (item.isActive) {
      handleInputChange(item.id, isChecked);
    }
  };

  const getOverLaySection = () => {
    if (!item.isActive) {
      const parentDetailCardHeight = document.getElementById(
        `${item.id}__detail-card`
      );
      const eligibleTextBlock = document.getElementById(
        `${item.id}__eligible-text`
      );
      if (eligibleTextBlock !== null) {
        eligibleTextBlock.style.minHeight = `${parentDetailCardHeight?.offsetHeight}px`;
        eligibleTextBlock.style.minWidth = `${parentDetailCardHeight?.offsetWidth}px`;
      }
    }
  };

  useEffect(() => {
    getOverLaySection();
    window.addEventListener('resize', getOverLaySection);
    return () => {
      window.removeEventListener('resize', getOverLaySection);
    };
  });

  function generateCardTestId(id: string): string {
    return `${id.toLowerCase()}-card`;
  }

  return (
    <div
      className={clsx([
        'rich-multichoice__card-section',
        isChecked && 'rich-multichoice__card-section--checked',
      ])}
      onClick={onClickCard}
      style={{
        cursor: `${item.isActive ? 'pointer' : 'not-allowed'}`,
      }}
    >
      {!item.isActive && (
        <div
          id={`${item.id}__eligible-text`}
          className="card rich-multichoice__eligible-text"
        >
          <div className="rich-multichoice__over-lay-text">
            <span>{item.eligibleText}</span>
          </div>
        </div>
      )}
      <div
        id={`${item.id}__detail-card`}
        className="card rich-multichoice__detail-card"
        style={{
          border: `${isChecked ? '1px solid #005098' : ''}`,
          background: `${isChecked ? '#F2F3FA' : ''}`,
        }}
      >
        {item.isRecommended && (
          <div className="card-header rich-multichoice__is-recommended-header">
            <RecommendIcon />
            {t('common:recommended.text')}
          </div>
        )}

        <div className="card-body">
          <div className="row rich-multichoice__logo-row">
            <div className="col-10">
              <img
                data-testid="insurer-logo"
                className="img-fluid mb-2"
                srcSet={item.logo}
                alt="Insurer Logo"
              />
              <h4
                data-testid={generateCardTestId(item.id)}
                className="d-inline"
              >
                {item.name}
              </h4>
            </div>
            <div className="col-2">
              {isChecked ? (
                <CheckIcon className="float-right input-shadow" />
              ) : (
                <UnCheckIcon className="float-right" />
              )}
            </div>
          </div>
          <div className="rich-multichoice__details-block">
            {!!item?.details &&
              item.details.map((detail: IDetail) => {
                return (
                  <div className="rich-multichoice__details row">
                    <div className="col-5 col-md-4 font-weight-bolder">
                      {detail.label}
                    </div>
                    <div className="col-7 col-md-8 rich-multichoice__details-value">
                      {detail.value}
                    </div>
                  </div>
                );
              })}
          </div>
        </div>
      </div>
    </div>
  );
};

export default Item;
