/* eslint-disable radix */
import * as Yup from 'yup';

const validateThaiID: Yup.TestFunction<
  string | undefined,
  Record<string, any>
> = (id: string | undefined) => {
  if (id === undefined) {
    return false;
  }
  if (!/^\d{13}$/g.test(id)) {
    return false;
  }

  let i;
  let sum;
  for (i = 0, sum = 0; i < 12; i += 1) {
    sum += Number.parseInt(id.charAt(i)) * (13 - i);
  }

  const checkSum = (11 - (sum % 11)) % 10;
  if (checkSum === Number.parseInt(id.charAt(12))) {
    return true;
  }
  return false;
};

// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types
export default (params?: { requiredIf: { field: any; value: any } }) => {
  if (params?.requiredIf) {
    const { field, value } = params.requiredIf;

    return Yup.string().when(field, {
      is: value,
      then: Yup.string()
        .test(
          'validate-thai-id',
          'common:validation.invalid_thai_id',
          validateThaiID
        )
        .required('common:validation.required'),
    });
  }

  return Yup.string()
    .test(
      'validate-thai-id',
      'common:validation.invalid_thai_id',
      validateThaiID
    )
    .required('common:validation.required');
};
