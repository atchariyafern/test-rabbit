export const getDefaultAnswer = (code, questions) => {
  const question = questions[code];

  // If skipQuestion is defined then return it's value
  if (Object.keys(question).includes('skipQuestion')) {
    return question.skipQuestion;
  }

  if (
    question.type === 'combo_radio_select' &&
    question.singleChoices.length === 1
  ) {
    return question.singleChoices[0].value;
  }

  return null;
};

export const getNextQuestion = (question, questionOrder, questions) => {
  let position = questionOrder.indexOf(question);

  if (questions[question].type === 'multi_question') {
    position += questions[question].questions.length;
  } else {
    position += 1;
  }

  if (position > questionOrder.length) {
    return null;
  }

  return questionOrder[position];
};

export const getNextSection = (section, sections) => {
  const sectionCodes = Object.keys(sections);
  const currentIndex = sectionCodes.indexOf(section);

  if (currentIndex >= sectionCodes.length) {
    return null;
  }

  return sectionCodes[currentIndex + 1];
};

export const isEndOfSection = (question, sections) => {
  const sectionQuestions = sections[question.section].questions;
  const questionIndex = sectionQuestions.indexOf(question.code);

  return questionIndex === sectionQuestions.length - 1;
};

export const getFollowingQuestions = (question, sections) => {
  const current = sections[question.section].questions.indexOf(question.code);
  const followingQuestions = [];

  sections[question.section].questions.forEach((questionCode, index) => {
    if (index <= current) {
      return;
    }

    followingQuestions.push(questionCode);
  });

  return followingQuestions;
};

export const getQuestionPosition = (code, config) => {
  if (!config.questionOrder) {
    return null;
  }

  return config.questionOrder.indexOf(code);
};

export const sortLabels = (a, b, direction = 'asc') => {
  let labelA = a.label;
  let labelB = b.label;
  if (direction === 'desc') {
    labelA = b.label;
    labelB = a.label;
  }

  let comparison = 0;
  if (labelA > labelB) {
    comparison = 1;
  } else if (labelA < labelB) {
    comparison = -1;
  }
  return comparison;
};
